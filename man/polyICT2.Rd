% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polyICT2.R
\docType{class}
\name{polyICT2}
\alias{polyICT2}
\title{polyICT2 class generator}
\value{
\item{n               }{The number of participants (see `Fields`).}
\item{phases          }{The phases of the study (see `Fields`).}
\item{propErrVar      }{The proportion of error variance (see `Fields`).}
\item{randFxMean     }{The fixed effects effect sizes (see `Fields`).}
\item{randFxCorMat          }{The correlation matrix of the random effects (see `Fields`).}
\item{randFxVar       }{The variance of the random effects (see `Fields`).}
\item{muFUN           }{A function for transforming random effects means (see `Fields`).}
\item{SigmaFun        }{A function for constructing the covariance matrix (see `Fields`).}
\item{randFxOrder       }{The order of the study. For example, a linear model
would be of order 1, and a quadratic model would be order 2.}
\item{designMat       }{The design matrix for one participant showing the structure
of study timing and phases.}
\item{randFxCovMat          }{The covariance matrix constructed using \code{randFxCorMat},
\code{randFxVar}, and \code{SigmaFun}.}
\item{nObservations   }{The number of observations per participant.}
\item{variances       }{Partition of the total variance into that due to
random effects and that due to error variance at time = 1.}
\item{expectedVariance}{The expected variances across all time points. This will
not match the variance of the simulated data unless n is large. See the \code{checkDesign}
parameter in \code{\link{ICTpower}}.}
\item{unStdInputMat    }{The unstandardized effect sizes constructed from the total
\code{expectedVariance} and the \code{randFxMean}. TODO: unStdInputMat is DEPRECATED!}
}
\description{
polyICT2 class generator

polyICT2 class generator
}
\examples{

# produce a simple ICT design
defaultPolyICT <- polyICT$new()

# print a summary
defaultPolyICT

# view the fields that are generated by `$new()` but cannot be changed by
# the user
defaultPolyICT$randFxOrder
defaultPolyICT$designMat
defaultPolyICT$randFxCovMat
defaultPolyICT$nObservations
defaultPolyICT$variances
defaultPolyICT$expectedVariances
defaultPolyICT$unStdInputMat



}
\author{
Stephen Tueller \email{stueller@rti.org}
}
\section{Super class}{
\code{\link[PersonAlyticsPower:designICT]{PersonAlyticsPower::designICT}} -> \code{polyICT}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{n}}{Numeric (integer). The number of participants. Default is 10.}

\item{\code{phases}}{List. Each phase in one item in the list with the phase name
repeated for the number of time points in the phase. For example, an "ABA"
study with 5 time points each would be \code{list(rep("A", 5), rep("B", 5),
rep("A", 5))}. See also the function \code{\link{makePhase}}. Default is
\code{makePhase()}.}

\item{\code{propErrVar}}{Numeric. The propotion of total variance that is error
variance. Default is .75.}

\item{\code{randFxMean}}{List of lists of named numeric vectors. The general form
is as follows, where the elipses (...) only illustrate that additional
inputs could be given:

\code{
randFxMean = list(
  group1 = list(
    phase1 = c(i=0.0, s=0.0, q=0.0, ...),
    phase2 = c(i=0.2, s=0.0, q=0.0, ...),
    phase3 = c(i=0.0, s=0.0, q=0.0, ...),
    ...
    ),
  group2 = list(
    phase1 = c(i=0.0, s=0.0, q=0.0, ...),
    phase2 = c(i=0.0, s=0.0, q=0.0, ...),
    phase3 = c(i=0.0, s=0.0, q=0.0, ...),
    ...
    ),
  ...
)
}

The length of randFxMean \code{length(randFxMean)} is the number of groups
and can take on any arbitrary name without quotes as long as it is a valid
variable name, see \code{\link{make.names}}. In the example above, the group
names are `group1` and `group2`, given without quotes.

Each group is itself a list whose length is the number of phases. The phase
names can take on any arbitrary name without quotes as long as they are valid
variable names. In the example above, \code{length(randFxMean$group1)} is 3,
i.e., there are three phases, and they are named `phase1`, `phase2`,
and `phase3`.

Each phase is a named numeric vector of effect sizes on the scale of Cohen's
d. In the example above, `i` indicates intercepts, `s` are slopes, and `q`
are quadratic terms. The elipsis (...) indicates higher order terms could
be included. All `q` and `s` terms are zero inticating no change over time.
These could be left out and only `i` included. Since \code{i=0.2} in the
`phase2` of `group1`, this indicates a small increase of Cohen's d=0.2 during
`phase2` relative to `phase1` (and `phase3`) in `group1` and relative to all
phases in `group2`. I other words, this is an ABA design with intervention
only in `phase2` for `group1`.}

\item{\code{randFxCorMat}}{Numeric matrix. A symmetric correlation matrix with a dimension
equal to the order of the model. For example, a quadratic model would
correpspond to a 3x3 matrix. The diagonal elements must equal 1, the off
diagonal elements must be between -1 and +1, and the matrix must be
invertable.}

\item{\code{randFxVar}}{Numeric vector. A vector of the same length as the order of
the polynomial
model containing the variances of the random effects. For example, in a
quadratic model, `randFxVar` would be length three, the first element would
be the intercept variance, the second element would be the slope variance,
and the third element would be the variance of the quadratic term.}

\item{\code{SigmaFun}}{An R function. A function to convert \code{randFxCorMat} and
\code{randFxVar} into the covariance matrix \code{randFxCovMat}. Default is
\code{\link{cor2cov}}.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{n}}{Numeric (integer). The number of participants. Default is 10.}

\item{\code{phases}}{List. Each phase in one item in the list with the phase name
repeated for the number of time points in the phase. For example, an "ABA"
study with 5 time points each would be \code{list(rep("A", 5), rep("B", 5),
rep("A", 5))}. See also the function \code{\link{makePhase}}. Default is
\code{makePhase()}.}

\item{\code{propErrVar}}{Numeric. The propotion of total variance that is error
variance. Default is .75.}

\item{\code{randFxMean}}{List of lists of named numeric vectors. The general form
is as follows, where the elipses (...) only illustrate that additional
inputs could be given:

\code{
randFxMean = list(
  group1 = list(
    phase1 = c(i=0.0, s=0.0, q=0.0, ...),
    phase2 = c(i=0.2, s=0.0, q=0.0, ...),
    phase3 = c(i=0.0, s=0.0, q=0.0, ...),
    ...
    ),
  group2 = list(
    phase1 = c(i=0.0, s=0.0, q=0.0, ...),
    phase2 = c(i=0.0, s=0.0, q=0.0, ...),
    phase3 = c(i=0.0, s=0.0, q=0.0, ...),
    ...
    ),
  ...
)
}

The length of randFxMean \code{length(randFxMean)} is the number of groups
and can take on any arbitrary name without quotes as long as it is a valid
variable name, see \code{\link{make.names}}. In the example above, the group
names are `group1` and `group2`, given without quotes.

Each group is itself a list whose length is the number of phases. The phase
names can take on any arbitrary name without quotes as long as they are valid
variable names. In the example above, \code{length(randFxMean$group1)} is 3,
i.e., there are three phases, and they are named `phase1`, `phase2`,
and `phase3`.

Each phase is a named numeric vector of effect sizes on the scale of Cohen's
d. In the example above, `i` indicates intercepts, `s` are slopes, and `q`
are quadratic terms. The elipsis (...) indicates higher order terms could
be included. All `q` and `s` terms are zero inticating no change over time.
These could be left out and only `i` included. Since \code{i=0.2} in the
`phase2` of `group1`, this indicates a small increase of Cohen's d=0.2 during
`phase2` relative to `phase1` (and `phase3`) in `group1` and relative to all
phases in `group2`. I other words, this is an ABA design with intervention
only in `phase2` for `group1`.}

\item{\code{randFxCorMat}}{Numeric matrix. A symmetric correlation matrix with a dimension
equal to the order of the model. For example, a quadratic model would
correpspond to a 3x3 matrix. The diagonal elements must equal 1, the off
diagonal elements must be between -1 and +1, and the matrix must be
invertable.}

\item{\code{randFxVar}}{Numeric vector. A vector of the same length as the order of
the polynomial
model containing the variances of the random effects. For example, in a
quadratic model, `randFxVar` would be length three, the first element would
be the intercept variance, the second element would be the slope variance,
and the third element would be the variance of the quadratic term.}

\item{\code{SigmaFun}}{An R function. A function to convert \code{randFxCorMat} and
\code{randFxVar} into the covariance matrix \code{randFxCovMat}. Default is
\code{\link{cor2cov}}.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-polyICT-new}{\code{polyICT2$new()}}
\item \href{#method-polyICT-print}{\code{polyICT2$print()}}
\item \href{#method-polyICT-makeData}{\code{polyICT2$makeData()}}
\item \href{#method-polyICT-clone}{\code{polyICT2$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="PersonAlyticsPower" data-topic="designICT" data-id="designCheck"><a href='../../PersonAlyticsPower/html/designICT.html#method-designICT-designCheck'><code>PersonAlyticsPower::designICT$designCheck()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-polyICT-new"></a>}}
\if{latex}{\out{\hypertarget{method-polyICT-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{polyICT2$new(
  n = 10,
  phases = makePhase(),
  propErrVar = 0.75,
  randFxMean = NULL,
  randFxCorMat = matrix(c(1, 0.2, 0.2, 1), 2, 2),
  randFxVar = c(1, 0.1),
  muFUN = function(x) x,
  SigmaFun = cor2cov,
  randFxOrder = NULL,
  designMat = NULL,
  randFxCovMat = NULL,
  nObservations = NULL,
  variances = NULL,
  expectedVariances = NULL,
  unStdInputMat = NULL
)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-polyICT-print"></a>}}
\if{latex}{\out{\hypertarget{method-polyICT-print}{}}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{polyICT2$print(...)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-polyICT-makeData"></a>}}
\if{latex}{\out{\hypertarget{method-polyICT-makeData}{}}}
\subsection{Method \code{makeData()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{polyICT2$makeData(randFx, errors = NULL, y = NULL, ymean = NULL, yvar = NULL)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-polyICT-clone"></a>}}
\if{latex}{\out{\hypertarget{method-polyICT-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{polyICT2$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
