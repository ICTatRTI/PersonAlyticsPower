% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ICTpower.R
\name{ICTpower}
\alias{ICTpower}
\title{ICTpower - get simulated power for an ICT design using parametric or
non-parametric bootstrap.}
\usage{
ICTpower(outFile = NULL, design = NULL, B = 100, dataFile = NULL,
  sampleSizes = NULL, alpha = 0.05, seed = 123,
  cores = parallel::detectCores() - 1, savePowerReport = TRUE,
  standardize = list(dv = TRUE, ivs = FALSE, byids = TRUE),
  prompt = TRUE, ...)
}
\arguments{
\item{outFile}{The file name for saving power analysis results.
It may be a full path. The simulated data are to be saved by including the
file extension in a list. For example,
\code{file=c('n10_medSlopeEffect', 'csv')}
or \code{file=c('condition2', 'Rdata')}. Only `csv` and `RData` are supported.}

\item{design}{An \code{\link{designICT}} object such as
\code{\link{polyICT}}. This must be provided for a parametric bootstrap
esstimate of power.}

\item{B}{The number of simulated dataset (or parametric bootstrap replications).}

\item{dataFile}{Character. A file name for exntant data. Use this option to
do a non-parametric bootstrap (e.g., for finite sample power).
If \code{dataFile} is provide, \code{design}
will be ignored. The \code{dataFile} must be a *.csv file with the variables
'id' and 'Time', optionally 'phase' and/or 'group', and dependent variables
labeled 'y'. Alternatively, \code{dataFile} may be a *.Rdata file named 'Data'
with the same columns as described for the *.csv file.}

\item{sampleSizes}{Numeric vector of the same length as the number of groups
in the data. The group specific sample sizes to be drawn \code{B} times from
the \code{dataFile} data.}

\item{alpha}{Numeric. Default is .05. The Type I error rate for computing
emprical power (i.e., the proportion of p-values across \code{B} data sets
that are less than or equal to \code{alpha}).}

\item{seed}{A random seed for replicating the power analysis.}

\item{cores}{The number of cores used in parralelized simulation (for a
parametric bootstrap) and for fitting models to the data for both bootstrap
types (see \code{\link{PersonAlytic}}). The default
is to use one fewer cores than are detected on the computer. Do not exceed
the maximum available cores or unexpected results may occur and R may crash.}

\item{savePowerReport}{Should the power report be saved using the
\code{outFile} name? If \code{TRUE}, a `txt` file is saved in the working
directory. This option is set to \code{FALSE} in the function
\code{\link{ICTpowerSim}} which instead saves the reports from several
conditions in a `csv` file.}

\item{standardize}{Named list of length 3. Default is
\code{list(dv = TRUE, ivs = FALSE, byids = TRUE)}. See
\code{\link{PersonAlytic}} or \code{\link{Palytic}}.}

\item{prompt}{Logical. Default is \code{TRUE}. If TRUE, a check for
whether \code{outFile} already exists will be done and if so, the user
will be prompted whether they want to overwirte \code{outFile}. The
\code{\link{ICTpowerSim}} function turns this off so the user does not
have to monitor a series of simulations.}

\item{...}{Further arguments to be passed to \code{\link{PersonAlytic}} for
analysis. All options in \code{PersonAlytic} can be passed except for
\code{output}, \code{data}, \code{ids}, \code{dvs}, \code{time}, and
\code{phase} as these are taken from the \code{design}.}
}
\description{
ICTpower - get simulated power for an ICT design using parametric or
non-parametric bootstrap.
}
\examples{

\dontrun{

example(polyICT)
myPolyICT$inputMat

# parametric bootstrap examples

# lazy cloning - this can lead to errors as `myPolyICT` is updated with each
# call to `myPolyICT$update`

#testICTpower10 <- ICTpower(c('testICTpower10', 'csv'),
#  myPolyICT, B=3,
#  seed = 54)
#testICTpower20 <- ICTpower(c('testICTpower20', 'csv'),
#  myPolyICT$update(groups=c(group1=20, group2=20)), B=3,
#  seed = 23)
#testICTpower20t100 <- ICTpower(c('testICTpower20', 'csv'),
#  myPolyICT$update(groups=c(group1=20, group2=20),
#  phases=makePhase(c(20,60,20))),
#  B=3, seed = 24)

# safe cloning
myPolyICT2 <- myPolyICT$clone(deep=TRUE)
myPolyICT2$update(groups=c(group1=20, group2=20))
testICTpower20 <- ICTpower(c('testICTpower20', 'csv'),
  myPolyICT2, B=3, seed = 25)

myPolyICT3 <- myPolyICT$clone(deep=TRUE)
myPolyICT3$update(groups=c(group1=20, group2=20),
  phases=makePhase(c(20,60,20)))
testICTpower20t100 <- ICTpower(c('testICTpower20', 'csv'),
  myPolyICT3, B=3, seed = 26)

myPolyICT4 <- myPolyICT$clone(deep=TRUE)
myPolyICT4$update(groups=c(group1=20, group2=20),
  phases=makePhase(c(20,60,20)))
testICTpower20t100 <- ICTpower(c('testICTpower20', 'csv'),
  myPolyICT4, B=3, seed = 27)


# non-parametric bootstrap examples

# create a population with 500 participants per group
myPolyICTnonPar <- myPolyICT$clone(deep=TRUE)
myPolyICTnonPar$update(groups=c(group1=500, group2=500))
Data <- myPolyICTnonPar$makeData()
save(Data, file = "Data.RData")

# non parametric bootstrap samlpes of 25 participants each group
ICTpower(outFile    = c("npbsTest", "csv"),
         B          = 3                   ,
         dataFile   = "Data.RData"        ,
         sampleSizes = c(25,25)           )

# with a finite power correction passing `fpc` by ...
ICTpower(outFile    = c("npbsFPCtest", "csv") ,
         B          = 3                       ,
         dataFile   = "Data.RData"            ,
         sampleSizes = c(25,25)               ,
         fpc        = 100                     )

# piecewise growth model example
ICTpower(outFile     = c("piecewise", "csv"),
         B           = 3                    ,
         dataFile    = "Data.RData"         ,
         sampleSizes = c(25,25)             ,
         alignPhase  = 'piecewise'          )

# clean up
txts <- dir(getwd(), glob2rx("*.txt"))
csvs <- dir(getwd(), glob2rx("*.csv"))
file.remove("Data.RData", txts, csvs)
 }

}
\author{
Stephen Tueller \email{stueller@rti.org}
}
