% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ICTpower.R
\name{mvrFam}
\alias{mvrFam}
\title{mvrFam - a function to simulate multivariate data from a gamlss family
distribution, following
"http://www.econometricsbysimulation.com/2014/02/easily-generate-correlated-variables.html"}
\usage{
mvrFam(design, parms, family = "qNO", seed = 1)
}
\arguments{
\item{design}{An \code{\link{polyICT}} object, or its not yet implemented siblings
\code{hyperICT}, \code{invPolyICT}, \code{expICT}, \code{negExpICT},
\code{logisticICT}.}

\item{parms}{A named list of parameters to be passed to a quantile function from
\code{\link{gamlss.family}}, specifically mu, sigma, tau, and nu. If \code{family}
doesn't use one of these parameters it will be ignored.}

\item{family}{Default "qNO". A quoted \code{\link{gamlss.family}} quantile
distribution.}

\item{seed}{Default 1. A random seed for replication.}
}
\description{
mvrFam - a function to simulate multivariate data from a gamlss family
distribution, following
"http://www.econometricsbysimulation.com/2014/02/easily-generate-correlated-variables.html"
}
\examples{
parms  <- list(mu=.5, sigma=.35, nu=.15, tau=.25)
design = polyICT$new(n=1000)
par(mfrow=c(2,2))

# beta distribution
YBEINF <- mvrFam(design = design, parms = parms, family="qBEINF")

# use the same parameters for normal, ignoring nu and tau
YNO    <- mvrFam(design = design, parms = parms, family="qNO")

# visualize
psych::pairs.panels(data.frame(YNO, YBEINF))

# quantile functions not in gamlss.family also work
norm <- mvrFam(design, parms=list(mean=0, sd=20, lower.tail=FALSE), "qnorm")
#pois <- mvrFam(design, parms=list(lambda=.3, lower.tail=FALSE), "qpois") # not working

# this example illustrates how mvrFam works under the hood
\dontrun{
# requires library(psych), not required by PersonAlyticsPower
corMat <- matrix(.5, nrow=3, ncol=3) + diag(3)*.5
corMat[1,3] <- corMat[3,1] <- .25
effectSizes <- list(randFx=list(intercept=0, slope=.5, quad=.1),
                    fixdFx=list(phase=.5, phaseTime=.5, phaseTime2=.04))
randFxVar <- c(1,.2,.1)


design <- polyICT$new(n=10000, corMat=corMat, effectSizes=effectSizes,
                      randFxVar=randFxVar)

# first simulate multivariate normal data
Y <- mvrnorm( design$n, rep(0, design$polyOrder + 1),  design$corMat)
psych::pairs.panels(Y)
all.equal(cor(Y), corMat, tolerance=.03)

# now get the propabilities
YpNorm <- data.frame(pnorm(Y))
psych::pairs.panels(YpNorm)
all.equal(unname(cor(YpNorm)), design$corMat, tolerance=.08)

# use the quantile functions on the probabilities to get non-normal data
# with approximately the same correlation matrix

# works well for symmetric distributions
YBEINF <- doLapply(YpNorm, .fcn="qBEINF", mu=.5, sigma=.35)
psych::pairs.panels(YBEINF)
all.equal(unname(cor(YBEINF)), corMat, tolerance=.08)

# does not work as well for skewed distributions
YLOGNO <- doLapply(YpNorm, "qLOGNO", mu=3, sigma=1)
psych::pairs.panels(YLOGNO)
all.equal(unname(cor(YLOGNO)), corMat, tolerance=.08)


}
}
\author{
Stephen Tueller \email{stueller@rti.org}
}
